name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      # Configure GitHub Pages before building
      
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      # Use Node 18 for image tooling due to known Node 20+/22 incompatibilities
      - name: Switch to Node 18 for optimization
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Optimize images (Squoosh)
        shell: bash
        run: |
          set -euo pipefail
          pnpm dlx @squoosh/cli@latest -h || true

          # Collect PNG files
          mapfile -t PNGS < <(find dist -type f -name '*.png') || true
          if [ ${#PNGS[@]} -gt 0 ]; then
            echo "Optimizing ${#PNGS[@]} PNG files with oxipng..."
            pnpm dlx @squoosh/cli@latest -d dist --oxipng '{"level":2}' "${PNGS[@]}"
            # If Squoosh wrote '*.oxipng.png', rename back to original names
            while IFS= read -r -d '' f; do
              base="${f%.oxipng.png}.png"
              mv -f "$f" "$base"
            done < <(find dist -type f -name '*.oxipng.png' -print0)
          else
            echo "No PNG files found under dist/."
          fi

          # Collect JPEG files
          mapfile -t JPGS < <(find dist -type f \( -name '*.jpg' -o -name '*.jpeg' \)) || true
          if [ ${#JPGS[@]} -gt 0 ]; then
            echo "Optimizing ${#JPGS[@]} JPEG files with mozjpeg..."
            pnpm dlx @squoosh/cli@latest -d dist --mozjpeg '{"quality":75}' "${JPGS[@]}"
            # Rename '*.mozjpeg.jpg' and '*.mozjpeg.jpeg' back to originals if created
            while IFS= read -r -d '' f; do
              base="${f%.mozjpeg.jpg}.jpg"
              mv -f "$f" "$base"
            done < <(find dist -type f -name '*.mozjpeg.jpg' -print0)
            while IFS= read -r -d '' f; do
              base="${f%.mozjpeg.jpeg}.jpeg"
              mv -f "$f" "$base"
            done < <(find dist -type f -name '*.mozjpeg.jpeg' -print0)
          else
            echo "No JPEG files found under dist/."
          fi

      - name: Optimize SVGs (SVGO)
        run: |
          pnpm dlx svgo@latest -r -f dist || true

      - name: List build output (debug)
        run: |
          echo "Built files (top):" && ls -lah dist || true
          echo "Built files (depth 2):" && find dist -maxdepth 2 -type f -print | sort || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
