@import "tailwindcss";
/* Global layout + dark background */
html,
body,
#root {
  height: 100%;
}
body {
  margin: 0;
}

@font-face {
  font-family: "PokemonClassic";
  /* Use processed asset path so it respects Vite base on Pages */
  src: url("./assets/fonts/pokemon-classic.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
body {
  font-family: "PokemonClassic", monospace;
}

/* GB-style sprite platform (oval) */
.gb-platform {
  background: repeating-linear-gradient(
      90deg,
      rgba(0, 0, 0, 0.08) 0 2px,
      rgba(0, 0, 0, 0) 2px 4px
    ),
    #ffffff;
  border: 2px solid #000;
  border-radius: 9999px;
  opacity: 0.9;
}

/* Sprite switch animations */
@keyframes simple-enter-left-kf {
  from { transform: translateX(-16px); opacity: 0; }
  to   { transform: translateX(0);     opacity: 1; }
}
@keyframes simple-enter-right-kf {
  from { transform: translateX(16px); opacity: 0; }
  to   { transform: translateX(0);    opacity: 1; }
}

.simple-enter-left  { animation: simple-enter-left-kf 200ms ease-out both; }
.simple-enter-right { animation: simple-enter-right-kf 200ms ease-out both; }

/* Blinking dots for message prompt */
@keyframes dots-blink {
  0%, 100% { opacity: 0.2; }
  50%      { opacity: 1; }
}
.blinking-dots {
  display: inline-block;
  margin-left: 4px;
  animation: dots-blink 900ms ease-in-out infinite;
}

/* Dust puff for switch in/out */
/* Sprite-sheet dust puff driven by CSS steps */
.dust-sprite {
  position: absolute;
  left: 50%;
  bottom: 6px;
  transform: translateX(-50%);
  width: var(--dust-size, 48px);
  height: var(--dust-size, 48px);
  /* Use processed asset path so it respects Vite base on Pages */
  background-image: url('./assets/effects/dust.png');
  background-repeat: no-repeat;
  background-position: 0 0;
  background-size: calc(var(--dust-frames, 5) * 100%) 100%;
  image-rendering: pixelated;
  pointer-events: none;
  animation: dust-steps 320ms steps(var(--dust-frames, 5)) both;
}

@keyframes dust-steps {
  from { background-position: 0% 0; opacity: 0.95; }
  to   { background-position: 100% 0; opacity: 0; }
}

/* MonsPreview: choppy retro staggered pop-in */
@keyframes monspreview-retro-pop {
  from {
    transform: translateY(6px) scale(0.8);
    opacity: 0;
  }
  50% {
    transform: translateY(2px) scale(1.02);
    opacity: 1;
  }
  to {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}


/* Scene fade-in when switching from intro to battlefield */
@keyframes scene-fade-in-kf {
  from { opacity: 0; transform: translateY(4px); filter: blur(1px); }
  to   { opacity: 1; transform: translateY(0);   filter: blur(0); }
}
.scene-fade-in { animation: scene-fade-in-kf 260ms ease-out both; }

/* Subtle CRT scanlines overlay for ScreenFrame */
.scanlines {
  /* Slightly stronger, denser pattern for better visibility */
  background: repeating-linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.10) 0px,
    rgba(255, 255, 255, 0.10) 1px,
    rgba(0, 0, 0, 0.12) 1px,
    rgba(0, 0, 0, 0.12) 2px,
    transparent 2px,
    transparent 4px
  );
}

/* Screen vignette for depth */
.screen-vignette {
  background: radial-gradient(ellipse at center, rgba(0,0,0,0) 55%, rgba(0,0,0,0.25) 100%);
}

/* Subtle SNES-like dotted gray background */
.snes-bg {
  background:
    radial-gradient(rgba(255,255,255,0.08) 1px, transparent 1px) 0 0 / 8px 8px,
    radial-gradient(rgba(0,0,0,0.04) 1px, transparent 1px) 4px 4px / 8px 8px,
    linear-gradient(180deg, #9b97a1 0%, #8a8590 100%);
}
